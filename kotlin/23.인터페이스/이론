인터페이스 : 클래스, 상속과 더불어 객체지향 프로그래밍의 중요한 요소.
- interface 인터페이스명{
    var 변수명
    fun 함수명()
}
- 구현부(함수의 본문)가 없음.
- 의사소통 창구
    - 인터페이스를 보고 인터페이스를 구현한 클래스의 객체와 의사소통 할 수 있다.
- 규약(프로토콜)
    - 인터페이스에 비어있는 걸(abstract, 추상) 구현하면 해당 인터페이스로 인식.
    - class 클래스명:인터페이스명{
        var 인터페이스변수명:타입 = 값
        fun 인터페이스함수명(){본문}
        }
    - 규약을 통해서 인터페이스만 보고도 클래스의 객체를 알 수 있음.
- 협업 시 좋음.
- 다중 구현이 가능.
    - class 클래스명:인터페이스1, 인터페이스2{}