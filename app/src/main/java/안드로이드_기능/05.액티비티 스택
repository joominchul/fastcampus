Activity Stack
- 기본적으로 LIFO, 후입선출 방식
- 스택은 될수 있으면 건들지 않음. -> 분명한 의도를 가지고서만 적용.

스택 관리
- 매니페스트 이용
    - launchMode : 매니패스트 액티비티에서 설정.
        <activity
            android:name=".stack3"
            android:launchMode="설정"
            android:exported="false" />
        - standard(LIFO) : 기본 설정. 인텐트를 통해 넘김.
        (findViewById<TextView>(R.id.two)).setOnClickListener {
            startActivity(Intent(this@stack1, stack2::class.java))
        }
        - singleTop : 탑에 있는 액티비티가 다시 호출되면 새로 호출하지 않음.
        - singleTask : 설정된 액티비티가 호출되면 새로운 스택을 만듬
            -> 신 스택에 다른 액티비티를 쌓을 수 있음.
            -> 뒤로 가기를 누르면 신 스택을 모두 다 소진하고 기존 스택을 소진함
        - singleInstance :설정된 액티비티가 호출되면 새로운 스택을 만듬
            -> 신 스택에 액티비티를 쌓을 수 없음(1인용). 이 상태에서 뒤로 가기를 하면 신 스택을 소진하고 기존 스택으로 이동함.
            -> 설정되지 않은 액티비티를 호출하면 기존 스택으로 이동함.
            -> 뒤로 가기를 누르면 기존 스택을 먼저 다 소진하고 신 스택을 소진함.
- 인텐트 플래그 이용
    - 적용 방법
        - setFlags : 기존 플래그를 삭제하고 새로 설정
        - addFlags : 플래그 추가
    (findViewById<TextView>(R.id.two)).setOnClickListener {
        val intent = Intent(this@stack2, stack2::class.java)
        intent.setFlags(Intent.플래그 이름)
        startActivity(intent)
    }
    - FLAG_ACTIVITY_NEW_TASK (singleTask)
    - FLAG_ACTIVITY_SINGLE_TOP (singleTop)
    - FLAG_ACTIVITY_CLEAR_TOP : 호출된 액티비티의 스택 위에 있는 액티비티들을 없앰.
        - A B C -> A를 호출 -> A
    - FLAG_ACTIVITY_NO_HISTORY : 설정된 액티비티는 스택에 쌓이지 않음. 예) 로딩
    - FLAG_ACTIVITY_REORDER_TO_FRONT : 호출된 액티비티가 스택에 존재할 경우 최상위로 올려줌.
        - A B C -> B를 호출 -> A C B
    - FLAG_ACTIVITY_NO_ANIMATION : 화면 전환 애니메이션을 생략